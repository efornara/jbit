#! /usr/bin/python3

import zlib
import os

roms = [
	'vga14.rom',
	'../midp/jbit/res/icon.png',
	'../midp/jbit/res/cga.rom',
	'../midp/jbit/res/intro17.jb',
]

directory = []

def chunker(seq, size):
	return (seq[pos:pos + size] for pos in range(0, len(seq), size))

print("""/*** File generated by genrom.py - DO NOT EDIT ***/

#include "rom.h"
""")

for file_name in roms:
	with open(file_name, 'rb') as f:
		original_data = f.read()
		if file_name.endswith('.png'):
			compressed_data = b''
			data = original_data
		else:
			compressed_data = zlib.compress(original_data, 9)
			data = compressed_data
		basename = os.path.basename(file_name)
		name = basename.replace('.', '_')
		print('static const unsigned char %s_data[] = {' % name)
		for chunk in chunker(data, 16):
			print('\t', end='')
			for byte in chunk:
				print(str(byte), end=',')
			print()
		print('};\n')
		directory.append((basename, name,
			len(compressed_data), len(original_data)))

print('RomEntry rom_entries[] = {')
for entry in directory:
	print('\t{ "%s", %s_data, %d, %d },' % entry)
print('};')
print('int n_of_roms = %d;' % len(roms))
